"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"link","label":"Decentralized Serverless Cloud","href":"/","docId":"introduction"},{"type":"category","label":"Consumers","items":[{"type":"link","label":"Get Started","href":"/developers/get-started","docId":"developers/get-started"},{"type":"link","label":"Job Creation","href":"/developers/job-creation","docId":"developers/job-creation"},{"type":"link","label":"Job Runtime Environment","href":"/developers/job-runtime-environment","docId":"developers/job-runtime-environment"},{"type":"link","label":"On Demand Jobs","href":"/developers/on-demand-jobs","docId":"developers/on-demand-jobs"}],"collapsed":false,"collapsible":true},{"type":"link","label":"Acurast Processors","href":"/acurast-processors","docId":"acurast-processors"},{"type":"link","label":"Acurast Orchestrator","href":"/acurast-orchestrator","docId":"acurast-orchestrator"},{"type":"category","label":"Acurast Protocol","items":[{"type":"category","label":"Architecture","items":[{"type":"link","label":"Overview","href":"/acurast-protocol/architecture/architecture","docId":"acurast-protocol/architecture/architecture"},{"type":"link","label":"End-to-End Zero Trust Job Execution","href":"/acurast-protocol/architecture/end-to-end","docId":"acurast-protocol/architecture/end-to-end"},{"type":"link","label":"Application Layer","href":"/acurast-protocol/architecture/application-layer","docId":"acurast-protocol/architecture/application-layer"},{"type":"link","label":"Execution Layer","href":"/acurast-protocol/architecture/execution-layer","docId":"acurast-protocol/architecture/execution-layer"},{"type":"link","label":"Consensus Layer","href":"/acurast-protocol/architecture/consensus-layer","docId":"acurast-protocol/architecture/consensus-layer"},{"type":"link","label":"Instances","href":"/acurast-protocol/architecture/instances","docId":"acurast-protocol/architecture/instances"}],"collapsed":false,"collapsible":true},{"type":"category","label":"Modules","items":[{"type":"link","label":"Enterprise","href":"/acurast-protocol/modules/enterprise","docId":"acurast-protocol/modules/enterprise"},{"type":"link","label":"Hyperdrive","href":"/acurast-protocol/modules/hyperdrive","docId":"acurast-protocol/modules/hyperdrive"},{"type":"link","label":"Singularity & Mesh","href":"/acurast-protocol/modules/singularity-mesh","docId":"acurast-protocol/modules/singularity-mesh"}],"collapsed":false,"collapsible":true},{"type":"link","label":"Node Setup","href":"/acurast-protocol/node-setup","docId":"acurast-protocol/node-setup"}],"collapsed":false,"collapsible":true},{"type":"category","label":"Ecosystems & Integrations","items":[{"type":"link","label":"Overview","href":"/integrations/introduction","docId":"integrations/introduction"},{"type":"link","label":"EVM Chains","href":"/integrations/evm","docId":"integrations/evm"},{"type":"link","label":"Substrate","href":"/integrations/substrate","docId":"integrations/substrate"},{"type":"link","label":"Substrate With WASM","href":"/integrations/substrate-wasm","docId":"integrations/substrate-wasm"},{"type":"link","label":"Tezos","href":"/integrations/tezos","docId":"integrations/tezos"}],"collapsed":false,"collapsible":true},{"type":"link","label":"Networks","href":"/networks","docId":"networks"},{"type":"link","label":"Wallets","href":"/wallets","docId":"wallets"}]},"docs":{"acurast-orchestrator":{"id":"acurast-orchestrator","title":"Acurast Orchestrator","description":"The Acurast Orchestrator is a centerpiece of the consensus layer, combining the orchestration (i.e., the scheduling of jobs and enabling the liquid matching) of the Processor\u2019s computational resources and Consumers. The orchestrator plays an essential role in the definition, agreement, and enforcement of value exchange between processors and consumers.","sidebar":"docs"},"acurast-processors":{"id":"acurast-processors","title":"Acurast Processors","description":"Acurast Processors are the infrastructure providers for Acurast\'s decentralized serverless cloud.","sidebar":"docs"},"acurast-protocol/architecture/application-layer":{"id":"acurast-protocol/architecture/application-layer","title":"Application Layer","description":"In the Internet of today, almost every application relies heavily on auxiliary systems. Whether external APIs are used for authentication, basic infrastructure (hosting), data availability, reliance, which can benefit from extending or replacing services and core elements with zero trust applications, essentially eliminating a host of threat events. The possibilities with Acurast are near-endless since today\'s centralized Internet is heavily centralized both logically and in terms of trust anchors.","sidebar":"docs"},"acurast-protocol/architecture/architecture":{"id":"acurast-protocol/architecture/architecture","title":"Overview","description":"Acurast separates the consensus, execution, and application layer (c.f., Fig. 1).","sidebar":"docs"},"acurast-protocol/architecture/consensus-layer":{"id":"acurast-protocol/architecture/consensus-layer","title":"Consensus Layer","description":"The Permissionless Consensus layer forms the base of the Acurast protocol and is based on a variant of the Nominated Proof-of-Stake (NPoS) algorithm [1]. Unlike traditional Proof-of-Stake (PoS) networks, there are validators and nominators in NPoS. Block validators verify transactions to be included in the next block, similar to traditional PoS block validators. The key difference is that instead of being randomly chosen, the validator nodes are nominated by another node.","sidebar":"docs"},"acurast-protocol/architecture/end-to-end":{"id":"acurast-protocol/architecture/end-to-end","title":"End-to-End Zero Trust Job Execution","description":"Acurast introduces a paradigm shift in verifiable and confidential computation, advancing the way decentralized applications are developed and deployed. To emphasize the inner workings of Acurast, the following description follows a job from definition and deployment to completion (c.f., Fig. 1).","sidebar":"docs"},"acurast-protocol/architecture/execution-layer":{"id":"acurast-protocol/architecture/execution-layer","title":"Execution Layer","description":"Acurast\'s execution layer is modular, allowing the flexible selection of runtimes according to the requirements of the use-case and the job, respectively. Decoupling the execution layer from the consensus and application layer allows the long-term evolution of runtimes, avoiding dependency lock-ins. Additionally, it ensures the highest level of service and confidentiality because security models can iteratively evolve with upgrades as novel threats emerge or new requirements arise.","sidebar":"docs"},"acurast-protocol/architecture/instances":{"id":"acurast-protocol/architecture/instances","title":"Instances","description":"Acurast will bootstrap three distinct networks: (a) the Acurast Testnet, (b) the Acurast Canary, and (c) the Acurast Mainnet.","sidebar":"docs"},"acurast-protocol/modules/enterprise":{"id":"acurast-protocol/modules/enterprise","title":"Enterprise","description":"The Enterprise module focuses on Web2.","sidebar":"docs"},"acurast-protocol/modules/hyperdrive":{"id":"acurast-protocol/modules/hyperdrive","title":"Hyperdrive","description":"The Hyperdrive module focuses on Web3.","sidebar":"docs"},"acurast-protocol/modules/singularity-mesh":{"id":"acurast-protocol/modules/singularity-mesh","title":"Singularity & Mesh","description":"The Singularity module focuses on AI.","sidebar":"docs"},"acurast-protocol/node-setup":{"id":"acurast-protocol/node-setup","title":"Node Setup","description":"Step by step guide on how to setup an Acurast node for the Rococo testnet.","sidebar":"docs"},"developers/create-address":{"id":"developers/create-address","title":"Create Address","description":"This guide explains how to create an address with Talisman wallet. To install the browser extensions, follow their setup instructions or checkout their walkshrough video."},"developers/get-started":{"id":"developers/get-started","title":"Get Started","description":"Consumers or Developers are the ones that are in need of computation for their applications. Consumers can define in accessible Javascript code their requirements and get access to computational resources through the Acurast Marketplace by being matched with Processors.","sidebar":"docs"},"developers/job-creation":{"id":"developers/job-creation","title":"Job Creation","description":"Use the Acurast Console to specify a job and post it on Acurast to be executed by Processors.","sidebar":"docs"},"developers/job-runtime-environment":{"id":"developers/job-runtime-environment","title":"Job Runtime Environment","description":"The job\'s script running on Processors has access to the following a set of APIs.","sidebar":"docs"},"developers/on-demand-jobs":{"id":"developers/on-demand-jobs","title":"On Demand Jobs","description":"On demand jobs are special kind of jobs that can be used to access a processor on demand from a dapp. This is achieved by having the job open a websocket connection to the acurast websocket service and setup handlers to process incoming messages.","sidebar":"docs"},"integrations/evm":{"id":"integrations/evm","title":"EVM Chains","description":"Acurast can be used to get access to computational resources for various use cases and bring them to EVM chains. For that, the Consumer creates a Job that performs a given task on the Acurast Console.","sidebar":"docs"},"integrations/introduction":{"id":"integrations/introduction","title":"Overview","description":"Acurast is built with interoperability at its core and is able to support various Web3 ecosystems and has multiple ways of being integrated within various environments such as EVM, WASM, Substrate and others.","sidebar":"docs"},"integrations/substrate":{"id":"integrations/substrate","title":"Substrate","description":"GitHub Repository","sidebar":"docs"},"integrations/substrate-wasm":{"id":"integrations/substrate-wasm","title":"Substrate With WASM","description":"Acurast can be used to fulfill directly to smart contracts deployed on Substrate chains with a pallet-contracts integration.","sidebar":"docs"},"integrations/tezos":{"id":"integrations/tezos","title":"Tezos","description":"Acurast can be used to get access to computational resources for various use cases and bring them to Tezos.","sidebar":"docs"},"introduction":{"id":"introduction","title":"Decentralized Serverless Cloud","description":"Acurast is a decentralized serverless cloud leveraging mobile devices.","sidebar":"docs"},"networks":{"id":"networks","title":"Networks","description":"A list of all related core infrastrucuture for each deployed Acurast network. More details on the functionalities of each network can be found in the Protocol Architecture \u2197","sidebar":"docs"},"wallets":{"id":"wallets","title":"Wallets","description":"A list of wallets supporting Acurast:","sidebar":"docs"}}}')}}]);